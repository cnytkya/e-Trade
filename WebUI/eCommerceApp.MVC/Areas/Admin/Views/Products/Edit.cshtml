@model EditProductDto

@{
    ViewData["Title"] = "Ürün Düzenle";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Main" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Products" asp-action="Index">Ürünler</a></li>
        <li class="breadcrumb-item active">Düzenle</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-edit me-1"></i>
            Ürün Bilgilerini Düzenle
        </div>
        <div class="card-body">
            @* enctype="multipart/form-data" DOSYA YÜKLEME İÇİN KRİTİKTİR *@
            <form asp-area="Admin" asp-controller="Products" asp-action="Edit" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="All" class="text-danger mb-3"></div>

                @* Gizli ID ve Mevcut ImageUrl alanları *@
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="ImageUrl" /> @* Mevcut resmi korumak için gönderilir *@

                <div class="row">
                    <div class="col-md-8">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Price" class="form-label"></label>
                            <input asp-for="Price" class="form-control" type="number" step="0.01" />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Stock" class="form-label"></label>
                            <input asp-for="Stock" class="form-control" type="number" />
                            <span asp-validation-for="Stock" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="SKU" class="form-label"></label>
                            <input asp-for="SKU" class="form-control" />
                            <span asp-validation-for="SKU" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="SubcategoryId" class="form-label"></label>
                            <select asp-for="SubcategoryId" asp-items="ViewBag.Subcategories" class="form-select">
                                <option value="">---Alt Kategori Seçiniz---</option>
                            </select>
                            <span asp-validation-for="SubcategoryId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <h6 class="mt-2">Mevcut Resim</h6>
                        @* Mevcut resmi göster ya da placeholder göster *@
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img id="currentImagePreview" src="@Url.Content(Model.ImageUrl)" class="img-thumbnail" style="width: 100%; height: auto; max-height: 200px; object-fit: cover;" alt="Mevcut Ürün Resmi" />
                        }
                        else
                        {
                            <img id="currentImagePreview" src="https://via.placeholder.com/200?text=Resim+Yok" class="img-thumbnail" style="width: 100%; height: auto; max-height: 200px; object-fit: cover;" alt="Varsayılan Resim" />
                        }

                        <div class="mt-3">
                            <label for="imageFile" class="form-label">Yeni Resim Seçin</label>
                            <input type="file" name="imageFile" id="imageFile" class="form-control" accept="image/*" />
                            <span class="text-muted small">Yeni bir resim seçmezseniz mevcut resim korunur.</span>
                        </div>
                    </div>
                </div>

                <hr class="my-4" />

                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-save"></i>
                    Kaydet
                </button>
                <a class="btn btn-secondary" asp-area="Admin" asp-controller="Products" asp-action="Index">
                    <i class="fas fa-times"></i>
                    İptal
                </a>
            </form>
        </div>
    </div>
</div>

<script>
    // Sayfa tamamen yüklendiğinde (HTML + CSS) çalışacak olay dinleyicisi
    document.addEventListener('DOMContentLoaded', function () {

        // "imageFile" id'sine sahip dosya yükleme inputunu buluyor
        const imageFileInput = document.getElementById('imageFile');

        // "currentImagePreview" id'sine sahip img etiketini buluyor (önizleme için)
        const imagePreview = document.getElementById('currentImagePreview');

        // Eğer hem input hem de img bulunduysa (yani sayfada varsa) devam et
        if (imageFileInput && imagePreview) {

            // Dosya inputuna "change" (dosya seçildiğinde) olayı ekleniyor
            imageFileInput.addEventListener('change', function (e) {

                // Kullanıcının seçtiği ilk dosyayı al
                const file = e.target.files[0];

                // Eğer dosya seçildiyse
                if (file) {

                    // Dosyayı okuyabilmek için FileReader nesnesi oluştur
                    const reader = new FileReader();

                    // Dosya okuma işlemi bittiğinde çalışacak fonksiyon
                    reader.onload = function (event) {
                        // Okunan dosyanın base64 data URL'sini al ve img etiketinin src'sine ata
                        imagePreview.src = event.target.result;
                    };

                    // Dosyayı "Data URL" formatında oku (resmi tarayıcıda gösterebilmek için)
                    reader.readAsDataURL(file);
                }
            });
        }
    });
</script>


